# Perfil de Producción
spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_POOL_MIN_IDLE:10}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        generate_statistics: false
        jdbc:
          "[batch_size]": 50
        "[order_inserts]": true
        "[order_updates]": true

  flyway:
    enabled: true
    validate-on-migrate: true
    clean-disabled: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      database: ${REDIS_DATABASE:0}
      timeout: ${REDIS_TIMEOUT:5000ms}
      jedis:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:20}
          max-idle: ${REDIS_POOL_MAX_IDLE:10}
          min-idle: ${REDIS_POOL_MIN_IDLE:5}

  cache:
    redis:
      time-to-live: ${CACHE_TTL:7200000}  # 2 horas en producción

server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  http2:
    enabled: true
  forward-headers-strategy: native
  tomcat:
    max-threads: ${SERVER_TOMCAT_MAX_THREADS:200}
    min-spare-threads: ${SERVER_TOMCAT_MIN_SPARE_THREADS:10}
    max-connections: ${SERVER_TOMCAT_MAX_CONNECTIONS:8192}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

jwt:
  secret: ${JWT_SECRET}  # Debe ser proporcionado como variable de entorno
  expiration: ${JWT_EXPIRATION:1800}  # 30 minutos en producción
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:43200}  # 12 horas

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}

logging:
  level:
    dev.kreaker.kinvex: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.transaction: WARN
    org.apache.tomcat: WARN
    org.apache.catalina: WARN
  file:
    name: ${LOG_FILE:/var/log/kinvex/kinvex-core.log}
  logback:
    rollingpolicy:
      max-file-size: ${LOG_MAX_FILE_SIZE:100MB}
      max-history: ${LOG_MAX_HISTORY:30}
      total-size-cap: ${LOG_TOTAL_SIZE_CAP:3GB}

# Configuraciones específicas para producción
app:
  debug: false
  mock-external-services: false
  enable-test-endpoints: false
  security:
    require-ssl: ${REQUIRE_SSL:true}
    session-timeout: ${SESSION_TIMEOUT:1800}
  monitoring:
    enabled: true
    metrics-enabled: true
